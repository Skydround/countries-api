{"version":3,"sources":["Components/SearchFilter/SearchFilter.js","Components/Country/Weather.js","Components/Country/Country.js","Components/Countries/Countries.js","App.js","index.js"],"names":["SearchFilter","handleFilterName","placeholder","onChange","Weather","country","useState","undefined","countryWeather","setCountryWeather","useEffect","axios","get","process","name","common","then","response","data","console","log","className","capital","current","condition","text","toLocaleLowerCase","width","src","icon","alt","temp_c","humidity","Country","population","Object","values","languages","map","flags","svg","Countries","displayedCountries","handleShowClick","length","type","onClick","countryObj","App","countries","setCountries","setDisplayedCountries","catch","error","event","userInput","target","value","filteredCountries","filter","myCountries","includes","copy","push","require","config","ReactDOM","render","document","getElementById"],"mappings":"8OAUeA,EAVM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACtB,OACE,gCACE,gDACA,gFACA,uBAAOC,YAAY,sBAAsBC,SAAUF,QCgC1CG,G,MAlCC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAA4CC,wBAASC,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAWA,OATAC,qBAAU,WACRC,IACGC,IADH,yDAEsDC,iCAFtD,cAEyFR,EAAQS,KAAKC,OAFtG,YAIGC,MAAK,SAAAC,GAAQ,OAAIR,EAAkBQ,EAASC,WAC9C,CAACb,EAAQS,KAAKC,SACjBI,QAAQC,IAAIZ,QAEWD,IAAnBC,EACK,mDAGL,sBAAKa,UAAU,qBAAf,UACE,6CAAgBhB,EAAQiB,QAAxB,OACA,wCACQd,EAAee,QAAQC,UAAUC,KAAKC,oBAD9C,OAGA,4BACE,qBAAKL,UAAU,gBACbM,MAAM,QACNC,IAAKpB,EAAee,QAAQC,UAAUK,KACtCC,IAAKzB,EAAQS,KAAKQ,YAGtB,uDAA0Bd,EAAee,QAAQQ,OAAjD,YACA,+CAAkBvB,EAAee,QAAQS,SAAzC,YCJOC,EAzBC,SAAC,GAAiB,IAAf5B,EAAc,EAAdA,QAGjB,OAFAc,QAAQC,IAAIf,GAGV,sBAAKgB,UAAU,qBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,6BAAKhB,EAAQS,KAAKC,SAClB,2CAAcV,EAAQiB,WACtB,8CAAiBjB,EAAQ6B,cACzB,2CACCC,OAAOC,OAAO/B,EAAQgC,WAAWC,KAAI,SAAAD,GAAS,OAC7C,6BAAqBA,GAAZA,MAEX,4BACE,qBACET,IAAKvB,EAAQkC,MAAMC,IACnBV,IAAKzB,EAAQS,KAAKC,cAIxB,cAAC,EAAD,CAASV,QAASA,QCMPoC,EA3BC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,mBAAoBC,EAAsB,EAAtBA,gBACjCC,EAASF,EAAmBE,OAGhC,GAFAzB,QAAQC,IAAI,mBAAoBwB,GAE5BA,EAAS,GACX,MAAO,4CACF,GAAIA,GAAU,IAAMA,EAAS,EAClC,OACE,8BACGF,EAAmBJ,KAAI,SAACjC,GAAD,OACtB,qBAAIgB,UAAU,GAAd,UACGhB,EAAQS,KAAKC,OACd,wBAAQ8B,KAAK,SAASC,QAAS,kBAAMH,EAAgBtC,IAArD,4BAFoBA,EAAQS,KAAKC,aASpC,GAAe,IAAX6B,EAAc,CACvB,IAAIG,EAAaL,EAAmB,GACpC,OAAO,cAAC,EAAD,CAASrC,QAAS0C,IAEzB,OAAO,qDCoBEC,EAvCH,WACV,MAAkC1C,mBAAS,IAA3C,mBAAO2C,EAAP,KAAkBC,EAAlB,KACA,EAAoD5C,mBAAS,IAA7D,mBAAOoC,EAAP,KAA2BS,EAA3B,KAEAzC,qBAAU,WACRC,IACGC,IADH,sCAEGI,MAAK,SAAAC,GACJiC,EAAajC,EAASC,SAEvBkC,OAAM,SAAAC,GAAK,OAAIlC,QAAQkC,MAAR,0BACjB,IAiBH,OACE,sBAAKhC,UAAU,iBAAf,UACE,cAAC,EAAD,CAAcpB,iBAjBO,SAAAqD,GACvB,IAAIC,EAAYD,EAAME,OAAOC,MAAM/B,oBAE/BgC,EADa,YAAOT,GACcU,QAAO,SAAAC,GAAW,OACtDA,EAAY9C,KAAKC,OAAOW,oBAAoBmC,SAASN,MAEvDJ,EAAsBO,MAYhB,cAAC,EAAD,CACEhB,mBAAoBA,EACpBC,gBAXc,SAAAtC,GACtB,IAAIyD,EAAO,GACXA,EAAKC,KAAK1D,GACV8C,EAAsBW,UC5B1BE,EAAQ,IAAUC,SAElBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.43d03f54.chunk.js","sourcesContent":["const SearchFilter = ({ handleFilterName }) => {\r\n  return (\r\n    <div>\r\n      <h1>Find a country</h1>\r\n      <h4>get country's statistics and capital's weather</h4>\r\n      <input placeholder=\"Type country's name\" onChange={handleFilterName} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchFilter\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Weather = ({ country }) => {\r\n  const [countryWeather, setCountryWeather] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${country.name.common}&aqi=no`\r\n      )\r\n      .then(response => setCountryWeather(response.data))\r\n  }, [country.name.common])\r\n  console.log(countryWeather)\r\n\r\n  if (countryWeather === undefined) {\r\n    return <div>Fetching data...</div>\r\n  } else\r\n    return (\r\n      <div className='weather__container'>\r\n        <h1>Weather in {country.capital}:</h1>\r\n        <div>\r\n          It's {countryWeather.current.condition.text.toLocaleLowerCase()}.\r\n        </div>\r\n        <p>\r\n          <img className='weather__logo'\r\n            width='100px'\r\n            src={countryWeather.current.condition.icon}\r\n            alt={country.name.capital}\r\n          />\r\n        </p>\r\n        <div>Todays temperature: {countryWeather.current.temp_c} Â°C</div>\r\n        <div>Humidity is {countryWeather.current.humidity}%</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import './Country.css'\r\nimport Weather from './Weather'\r\n\r\nconst Country = ({ country }) => {\r\n  console.log(country)\r\n\r\n  return (\r\n    <div className='country__container'>\r\n      <div className='statistics__container'>\r\n        <h1>{country.name.common}</h1>\r\n        <div>Capital {country.capital}</div>\r\n        <div>Population {country.population}</div>\r\n        <h3>Languages</h3>\r\n        {Object.values(country.languages).map(languages => (\r\n          <ul key={languages}>{languages}</ul>\r\n        ))}\r\n        <p>\r\n          <img \r\n            src={country.flags.svg}\r\n            alt={country.name.common}\r\n          />\r\n        </p>\r\n      </div>\r\n      <Weather country={country}></Weather>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Country\r\n","import Country from \"../Country/Country\";\r\n\r\nconst Countries = ({ displayedCountries, handleShowClick }) => {\r\n    let length = displayedCountries.length;\r\n    console.log(\"Countries length\", length);\r\n  \r\n    if (length > 10 ) {\r\n      return 'Too many matches, specify another filter.'\r\n    } else if (length <= 10 && length > 1) {\r\n      return (\r\n        <div>\r\n          {displayedCountries.map((country) => (\r\n            <ul className=\"\" key={country.name.common}>\r\n              {country.name.common}\r\n              <button type=\"button\" onClick={() => handleShowClick(country)}>\r\n                Show country\r\n              </button>\r\n            </ul>\r\n          ))}\r\n        </div>\r\n      );\r\n    } else if (length === 1) {\r\n      let countryObj = displayedCountries[0];\r\n      return <Country country={countryObj} />;\r\n    } else {\r\n      return <div>No matches found </div>;\r\n    }\r\n  };\r\n\r\n  export default Countries;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport SearchFilter from './Components/SearchFilter/SearchFilter'\nimport Countries from './Components/Countries/Countries'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [displayedCountries, setDisplayedCountries] = useState([])\n\n  useEffect(() => {\n    axios\n      .get(`https://restcountries.com/v3.1/all`)\n      .then(response => {\n        setCountries(response.data)\n      })\n      .catch(error => console.error(`Cannot fetch data`))\n  }, [])\n\n  const handleFilterName = event => {\n    let userInput = event.target.value.toLocaleLowerCase()\n    let countriesCopy = [...countries] //gets executed ON EACH render\n    let filteredCountries = countriesCopy.filter(myCountries =>\n      myCountries.name.common.toLocaleLowerCase().includes(userInput)\n    )\n    setDisplayedCountries(filteredCountries) //render\n  }\n\n  const handleShowClick = country => {\n    let copy = []\n    copy.push(country)\n    setDisplayedCountries(copy)\n  }\n\n  return (\n    <div className='app__container'>\n      <SearchFilter handleFilterName={handleFilterName} />\n          <Countries\n            displayedCountries={displayedCountries}\n            handleShowClick={handleShowClick}\n          />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}